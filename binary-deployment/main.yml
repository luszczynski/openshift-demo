#https://blog.openshift.com/deploying-war-file-openshift-online-3/
#https://blog.openshift.com/binary-input-sources-openshift-3-2/
---
- include_vars: ../vars.yml

- name: Logging with system:admin
  shell: oc login -u system:admin
  changed_when: False

- name: Checking if binary-deployment project is already created
  shell: oc get projects | grep binary-deployment || true
  register: bd_project_installed
  changed_when: False

- name: Create binary-deployment project
  shell: oc new-project binary-deployment --display-name="Binary Deployment" --description="Binary Deployment on Openshift v3"
  when: bd_project_installed.stdout == "" and uninstall is undefined

- name: Adding admin permission to user {{openshift_user}}
  shell: oc policy add-role-to-user admin {{openshift_user}} -n binary-deployment
  when: bd_project_installed.stdout == "" and uninstall is undefined

- name: Create example app
  shell: oc new-app wildfly:latest~. --name binary -n binary-deployment && oc expose svc binary -n binary-deployment
  when: bd_project_installed.stdout == "" and uninstall is undefined

- name: Create build
  shell: oc start-build mysample --from-file=sample.war
  when: bd_project_installed.stdout == "" and uninstall is undefined

# Uninstalling
- name: Deleting binary-deployment project
  shell: oc delete project binary-deployment
  when: bd_project_installed.stdout != "" and uninstall is defined
